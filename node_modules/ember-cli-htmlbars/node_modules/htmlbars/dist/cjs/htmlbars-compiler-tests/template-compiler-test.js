"use strict";
var TemplateCompiler = require("../htmlbars-compiler/template-compiler")["default"];
var preprocess = require("../htmlbars-syntax/parser").preprocess;
var equalHTML = require("../htmlbars-test-helpers").equalHTML;
var defaultHooks = require("../htmlbars-runtime/hooks")["default"];
var defaultHelpers = require("../htmlbars-runtime/helpers")["default"];
var merge = require("../htmlbars-util/object-utils").merge;
var DOMHelper = require("../morph").DOMHelper;

QUnit.module("TemplateCompiler");

var dom, hooks, helpers;

test("it works", function testFunction() {
  /* jshint evil: true */
  var ast = preprocess('<div>{{#if working}}Hello {{firstName}} {{lastName}}!{{/if}}</div>');
  var compiler = new TemplateCompiler();
  var program = compiler.compile(ast);
  var template = new Function("return " + program)();

  dom = new DOMHelper();
  hooks = merge({}, defaultHooks);
  helpers = merge({}, defaultHelpers);
  
  var env = {
    dom: dom,
    hooks: hooks,
    helpers: helpers 
  };

  env.helpers['if'] = function(params, hash, options) {
    if (params[0]) {
      return options.template.render(context, env, options.morph.contextualElement);
    }
  };

  var context = {
    working: true,
    firstName: 'Kris',
    lastName: 'Selden'
  };
  var frag = template.render(context, env, document.body);
  equalHTML(frag, '<div>Hello Kris Selden!</div>');
});